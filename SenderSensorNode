#include <esp_now.h>
#include <WiFi.h>

uint8_t relayMAC[] = {0xAA, 0xBB, 0xCC, 0xDD, 0xEE, 0xFF}; // Replace with the relay node's MAC also use your MAC ADDRESS 
// also use your MAC ADDRESS.
typedef struct Message {
    int sensorValue;
} Message;

Message dataToSend;

esp_now_peer_info_t peerInfo;

void onSent(const uint8_t *mac_addr, esp_now_send_status_t status) {
    Serial.print("Send Status: ");
    Serial.println(status == ESP_NOW_SEND_SUCCESS ? "Success" : "Fail");
}

void setup() {
    Serial.begin(115200);
    WiFi.mode(WIFI_MODE_STA);
    
    if (esp_now_init() != ESP_OK) {
        Serial.println("ESP-NOW init failed!");
        return;
    }

    esp_now_register_send_cb(onSent);

    memcpy(peerInfo.peer_addr, relayMAC, 6);
    peerInfo.channel = 0;
    peerInfo.encrypt = false;

    if (esp_now_add_peer(&peerInfo) != ESP_OK) {
        Serial.println("Failed to add peer");
        return;
    }
}

void loop() {
    dataToSend.sensorValue = random(0, 100); // Simulating sensor data
    esp_err_t result = esp_now_send(relayMAC, (uint8_t *)&dataToSend, sizeof(dataToSend));

    if (result == ESP_OK) {
        Serial.println("Message Sent");
    } else {
        Serial.println("Send Failed");
    }

    delay(2000); // Adjust based on your needs
}
